const YouTubeExtractor = require('../services/youtubeService');
const { YoutubeCommentDownloader } = require('../services/youtube_comment_downloader');

// Inst√¢ncias dos servi√ßos
const youtubeExtractor = new YouTubeExtractor();
const commentDownloader = new YoutubeCommentDownloader();

/**
 * Controller para obter v√≠deo mais recente de um canal
 */
const getLatestVideo = async (req, res) => {
  try {
    const { channelHandle } = req.body;
    
    if (!channelHandle) {
      return res.status(400).json({ erro: '√â necess√°rio fornecer o handle do canal (ex: @nomedocanal)' });
    }
    
    console.log(`üîç Buscando v√≠deo mais recente do canal: ${channelHandle}`);
    const videoInfo = await youtubeExtractor.getLatestVideo(channelHandle);
    
    // Adicionar propriedade 'data' convertendo dataPublicacao
    if (videoInfo.dataPublicacao) {
      videoInfo.data = commentDownloader.converterDataRelativa(videoInfo.dataPublicacao);
    }
    
    // Adicionar propriedade 'title' al√©m do 'titulo' existente
    if (videoInfo.titulo) {
      videoInfo.title = videoInfo.titulo;
    }
    
    console.log(`‚úÖ V√≠deo mais recente encontrado: ${videoInfo.titulo}`);
    res.json(videoInfo);
  } catch (erro) {
    console.error('Erro ao processar requisi√ß√£o:', erro);
    res.status(500).json({ 
      erro: 'Erro ao obter v√≠deo mais recente',
      mensagem: erro.message 
    });
  }
};

/**
 * Controller para obter informa√ß√µes de um v√≠deo espec√≠fico
 */
const getVideoInfo = async (req, res) => {
  try {
    const { videoUrl } = req.body;
    
    if (!videoUrl) {
      return res.status(400).json({ erro: '√â necess√°rio fornecer a URL do v√≠deo' });
    }
    
    console.log(`üîç Buscando informa√ß√µes do v√≠deo: ${videoUrl}`);
    
    // Extrair informa√ß√µes detalhadas do v√≠deo
    const videoInfo = await youtubeExtractor.getVideoDetails(videoUrl);
    
    // Adicionar propriedade 'data' convertendo dataPublicacao
    if (videoInfo.dataPublicacao) {
      videoInfo.data = commentDownloader.converterDataRelativa(videoInfo.dataPublicacao);
    }
    
    // Adicionar propriedade 'title' al√©m do 'titulo' existente
    if (videoInfo.titulo) {
      videoInfo.title = videoInfo.titulo;
    }
    
    // Adicionar URL do v√≠deo na resposta
    videoInfo.url = videoUrl;
    
    console.log(`‚úÖ Informa√ß√µes do v√≠deo obtidas: ${videoInfo.titulo}`);
    res.json(videoInfo);
  } catch (erro) {
    console.error('Erro ao processar requisi√ß√£o:', erro);
    res.status(500).json({ 
      erro: 'Erro ao obter informa√ß√µes do v√≠deo',
      mensagem: erro.message 
    });
  }
};

module.exports = {
  getLatestVideo,
  getVideoInfo
}; 